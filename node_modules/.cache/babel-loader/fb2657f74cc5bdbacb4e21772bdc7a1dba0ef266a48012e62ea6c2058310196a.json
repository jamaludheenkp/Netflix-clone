{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\React Challenge\\\\Netflix\\\\src\\\\Components\\\\RowPost\\\\RowPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport './RowPost.css';\nimport { imageUrl } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      // alert('Network error')\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.poster_path}`,\n        alt: \"Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","Youtube","imageUrl","axios","RowPost","props","movies","setMovies","get","url","then","response","console","log","data","results","catch","err","title","map","obj","isSmall","poster_path"],"sources":["C:/web/React Challenge/Netflix/src/Components/RowPost/RowPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css';\r\nimport { imageUrl} from '../../constants/constants';\r\nimport axios from '../../axios';\r\n\r\n\r\nfunction RowPost(props) {\r\n  const [movies, setMovies]= useState([])\r\n  useEffect(()=>{\r\n    axios.get(props.url).then(response=>{\r\n      console.log(response.data)\r\n      setMovies(response.data.results)\r\n\r\n    }).catch(err=>{\r\n      // alert('Network error')\r\n    })\r\n\r\n  },[])\r\n  return (\r\n    <div className='row'>\r\n      <h2 >{props.title}</h2>\r\n        <div className=\"posters\">\r\n          {movies.map((obj)=>\r\n\r\n            <img className={props.isSmall ? 'smallPoster' : 'poster'} src={`${imageUrl+obj.poster_path}`} alt=\"Poster\" />\r\n\r\n          )}\r\n            \r\n\r\n        </div>\r\n        <Youtube />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,eAAe;AACtB,SAASC,QAAQ,QAAO,2BAA2B;AACnD,OAAOC,KAAK,MAAM,aAAa;AAAC;AAGhC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EACvCD,SAAS,CAAC,MAAI;IACZI,KAAK,CAACK,GAAG,CAACH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BP,SAAS,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAElC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAE;MACZ;IAAA,CACD,CAAC;EAEJ,CAAC,EAAC,EAAE,CAAC;EACL,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAMZ,KAAK,CAACa;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBZ,MAAM,CAACa,GAAG,CAAEC,GAAG,iBAEd;QAAK,SAAS,EAAEf,KAAK,CAACgB,OAAO,GAAG,aAAa,GAAG,QAAS;QAAC,GAAG,EAAG,GAAEnB,QAAQ,GAACkB,GAAG,CAACE,WAAY,EAAE;QAAC,GAAG,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAE9G;MAAA;MAAA;MAAA;IAAA,QAGG,eACN,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;AAAC,GA3BQlB,OAAO;AAAA,KAAPA,OAAO;AA6BhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}