{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\React Challenge\\\\sample\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const addCount = () => {\n    setCount(co);\n    console.log(count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCount,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","count","setCount","addCount","co","console","log"],"sources":["C:/web/React Challenge/sample/src/App.js"],"sourcesContent":["import './App.css'\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [count,setCount]=useState(0)\n  const addCount=()=>{\n    setCount(co)\n    console.log(count);\n  }\n  return (\n    <div className='App'>\n      <button onClick={addCount}>Add</button>\n      <h1>Counter : {count}</h1>\n    </div>\n  )\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACH,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAMI,QAAQ,GAAC,MAAI;IACjBD,QAAQ,CAACE,EAAE,CAAC;IACZC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EACpB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,OAAO,EAAEE,QAAS;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,eACvC;MAAA,WAAI,YAAU,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV;AAAC,GAbQD,GAAG;AAAA,KAAHA,GAAG;AAeZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}